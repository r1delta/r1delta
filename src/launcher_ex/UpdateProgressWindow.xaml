<Window x:Class="launcher_ex.UpdateProgressWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:shell="http://schemas.microsoft.com/winfx/2006/xaml/presentation/shell"
        FontFamily="Arial"
        FontSize="12" 
        UseLayoutRounding="True"
        Icon="pack://application:,,,/icon1.ico"
        Title="Updating…" Height="220" Width="550"
        WindowStartupLocation="CenterScreen"
        ResizeMode="NoResize"
        >

    <WindowChrome.WindowChrome>
        <WindowChrome
            ResizeBorderThickness="6"
            CaptionHeight="43"
            CornerRadius="25,25,10,10"
            GlassFrameThickness="0">
        </WindowChrome>
    </WindowChrome.WindowChrome>

    <Window.Resources>
        <ResourceDictionary>
            <Style x:Key="CloseButtonStyle" TargetType="Button">
                <Setter Property="Width" Value="20" />
                <Setter Property="Height" Value="20" />
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="BorderBrush" Value="Transparent" />
                <Setter Property="Foreground" Value="White" />
                <Setter Property="HorizontalAlignment" Value="Right" />
                <Setter Property="VerticalAlignment" Value="Top" />
                <Setter Property="FontSize" Value="9" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border Background="{TemplateBinding Background}">
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Foreground" Value="White" />
                                    <Setter Property="Background" Value="#FF920202" />
                                </Trigger>
                                <Trigger Property="IsPressed" Value="true">
                                    <Setter Property="Foreground" Value="White" />
                                    <Setter Property="Foreground" Value="#FFAAAAAA"/>
                                    <!-- Dim text when disabled -->
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="MinimizeButtonStyle" TargetType="Button">
                <Setter Property="Width" Value="20" />
                <Setter Property="Height" Value="20" />
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="BorderBrush" Value="Transparent" />
                <Setter Property="Foreground" Value="White" />
                <Setter Property="FontWeight" Value="Bold" />
                <Setter Property="HorizontalAlignment" Value="Right" />
                <Setter Property="VerticalAlignment" Value="Top" />
                <Setter Property="FontSize" Value="8" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border Background="{TemplateBinding Background}">
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="#fe191919" />
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter Property="Background" Value="#ee0f0f0f" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!-- Dark theme colors -->
            <Color x:Key="DarkBackgroundColor">#FF1E1E1E</Color>
            <Color x:Key="DarkForegroundColor">#FFF0F0F0</Color>
            <Color x:Key="DarkControlColor">#FF2D2D30</Color>
            <Color x:Key="DarkBorderColor">#FF3E3E42</Color>
            <Color x:Key="SomeHoverColor">#FF3A3A3A</Color>
            <!-- Moved Hover Color -->

            <!-- Brushes -->
            <SolidColorBrush x:Key="WindowBackgroundBrush" Color="{StaticResource DarkBackgroundColor}"/>
            <SolidColorBrush x:Key="TextBrush" Color="{StaticResource DarkForegroundColor}"/>
            <SolidColorBrush x:Key="ControlBrush" Color="{StaticResource DarkControlColor}"/>
            <SolidColorBrush x:Key="BorderBrushDark" Color="{StaticResource DarkBorderColor}"/>
            <SolidColorBrush x:Key="SomeHoverColorBrush" Color="{StaticResource SomeHoverColor}" />
            <!-- Moved Hover Brush -->

            <!-- Focus Visual Style -->
            <Style x:Key="WhiteFocusVisual">
                <Setter Property="Control.Template">
                    <Setter.Value>
                        <ControlTemplate>
                            <Rectangle Stroke="White" StrokeThickness="1" StrokeDashArray="1,2" />
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!-- Global Styles for common controls - DARK THEME -->
            <Style TargetType="TextBlock">
                <Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
            </Style>

            <Style TargetType="TextBox" BasedOn="{StaticResource {x:Type TextBox}}">
                <Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
                <Setter Property="Background" Value="{StaticResource ControlBrush}"/>
                <Setter Property="BorderBrush" Value="{StaticResource BorderBrushDark}"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="TextBox">
                            <Border 
                Background="{TemplateBinding Background}" 
                BorderBrush="{TemplateBinding BorderBrush}" 
                BorderThickness="{TemplateBinding BorderThickness}" 
                CornerRadius="4">
                                <ScrollViewer Margin="0" x:Name="PART_ContentHost"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
                <Setter Property="Background" Value="{StaticResource ControlBrush}" />
                <Setter Property="Foreground" Value="{StaticResource TextBrush}" />
                <Setter Property="BorderBrush" Value="{StaticResource BorderBrushDark}" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border
                x:Name="Border"
                Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="1"
                CornerRadius="7">
                                <ContentPresenter
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Margin="4" />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="Border" Property="Background" Value="{StaticResource SomeHoverColorBrush}" />
                                </Trigger>
                                <Trigger Property="IsPressed" Value="true">
                                    <Setter TargetName="Border" Property="Opacity" Value="0.8" />
                                    <Setter Property="Foreground" Value="#FFAAAAAA"/>
                                    <!-- Dim text when disabled -->
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!-- Dark CheckBox Style (Applied by default to all CheckBoxes when this theme is loaded) -->
            <Style TargetType="CheckBox" BasedOn="{StaticResource {x:Type CheckBox}}">
                <Setter Property="Foreground" Value="{StaticResource TextBrush}" />
                <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="CheckBox">
                            <Grid x:Name="RootGrid" VerticalAlignment="Center" SnapsToDevicePixels="True" UseLayoutRounding="True">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <!-- The checkbox box -->
                                <Border x:Name="Border"
                      Width="17" Height="16"
                      Background="{StaticResource ControlBrush}"
                      BorderBrush="{StaticResource BorderBrushDark}"
                      BorderThickness="1"
                      VerticalAlignment="Center"
                      HorizontalAlignment="Left"
                      SnapsToDevicePixels="True"
                      CornerRadius="2"
                      UseLayoutRounding="True"/>
                                <!-- Check Mark -->
                                <Path x:Name="CheckMark"
                          Data="M2,8 L6,12 L14,4"
                          Stroke="{StaticResource TextBrush}"
                          StrokeThickness="2"
                          Visibility="Collapsed"
                          VerticalAlignment="Center"
                          HorizontalAlignment="Center"
                          Grid.Column="0"
                          SnapsToDevicePixels="True"
                          UseLayoutRounding="True">
                                    <Path.RenderTransform>
                                        <TranslateTransform Y="-2"/>
                                    </Path.RenderTransform>
                                </Path>
                                <!-- ContentPresenter for the label -->
                                <ContentPresenter x:Name="contentPresenter"
                                Grid.Column="1"
                                VerticalAlignment="Center"
                                Margin="4,0,0,0"
                                RecognizesAccessKey="True"
                                ContentSource="Content"
                                SnapsToDevicePixels="True"
                                UseLayoutRounding="True"/>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsChecked" Value="True">
                                    <Setter TargetName="CheckMark" Property="Visibility" Value="Visible" />
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter TargetName="Border" Property="Opacity" Value="0.5" />
                                    <Setter TargetName="CheckMark" Property="Opacity" Value="0.5" />
                                    <Setter Property="Foreground" Value="#FFAAAAAA"/>
                                    <!-- Dim text when disabled -->
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="Border" Property="Background" Value="{StaticResource SomeHoverColorBrush}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style TargetType="ProgressBar" BasedOn="{StaticResource {x:Type ProgressBar}}">
                <Setter Property="Foreground" Value="#FF007ACC" />
                <!-- Keep the blue progress, maybe adjust? -->
                <Setter Property="Background" Value="{StaticResource ControlBrush}"/>
                <Setter Property="BorderBrush" Value="{StaticResource BorderBrushDark}"/>
            </Style>


            <Style x:Key="FilePickerButtonStyle" TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
                <Setter Property="Background" Value="{StaticResource ControlBrush}" />
                <Setter Property="Foreground" Value="{StaticResource TextBrush}" />
                <Setter Property="BorderBrush" Value="{StaticResource BorderBrushDark}" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border
                x:Name="Border"
                Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="1"
                CornerRadius="4">
                                <ContentPresenter
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Margin="4" />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="Border" Property="Background" Value="{StaticResource SomeHoverColorBrush}" />
                                </Trigger>
                                <Trigger Property="IsPressed" Value="true">
                                    <Setter TargetName="Border" Property="Opacity" Value="0.8" />
                                    <Setter Property="Foreground" Value="#FFAAAAAA"/>
                                    <!-- Dim text when disabled -->
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>


            <!-- Keep your scale transform -->
            <ScaleTransform x:Key="windowScaleTransform" ScaleX="1.5" ScaleY="1.5" />

            <!-- No theme-specific resources here anymore -->

        </ResourceDictionary>
    </Window.Resources>

    <Grid Margin="-11,-21,-9,-6">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <Grid.Background>
            <ImageBrush ImageSource="/menu_background_imc.png" Stretch="UniformToFill" />
        </Grid.Background>

        <!-- Status text -->
        <TextBlock x:Name="StatusText"
               Text="Preparing Update…"
               FontSize="24"
               FontWeight="Bold"
               Margin="29,70,25,20" Grid.Row="2"/>

        <!-- Progress bar -->
        <ProgressBar x:Name="ProgressBar"
                 Grid.Row="2"
                 Height="30"
                 Minimum="0"
                 Maximum="100"
                 IsIndeterminate="False" Margin="29,135,25,64"/>

        <!-- Optional Cancel button -->
        <StackPanel Grid.Row="2"
                Orientation="Horizontal"
                HorizontalAlignment="Right"
                Margin="0,85,10,-75">
            <Button x:Name="CancelButton"
              Content="Cancel"
              Width="75"
              Click="CancelButton_Click" Height="24" Margin="0,20,15,0"/>
        </StackPanel>
    </Grid>
</Window>