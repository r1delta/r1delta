<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <!-- Dark theme colors -->
    <Color x:Key="DarkBackgroundColor">#FF1E1E1E</Color>
    <Color x:Key="DarkForegroundColor">#FFF0F0F0</Color>
    <Color x:Key="DarkControlColor">#FF2D2D30</Color>
    <Color x:Key="DarkBorderColor">#FF3E3E42</Color>
    <Color x:Key="SomeHoverColor">#FF3A3A3A</Color>
    <!-- Moved Hover Color -->

    <!-- Brushes -->
    <SolidColorBrush x:Key="WindowBackgroundBrush" Color="{StaticResource DarkBackgroundColor}"/>
    <SolidColorBrush x:Key="TextBrush" Color="{StaticResource DarkForegroundColor}"/>
    <SolidColorBrush x:Key="ControlBrush" Color="{StaticResource DarkControlColor}"/>
    <SolidColorBrush x:Key="BorderBrushDark" Color="{StaticResource DarkBorderColor}"/>
    <SolidColorBrush x:Key="SomeHoverColorBrush" Color="{StaticResource SomeHoverColor}" />
    <!-- Moved Hover Brush -->
    
    <!-- Focus Visual Style -->
    <Style x:Key="WhiteFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Stroke="White" StrokeThickness="1" StrokeDashArray="1,2" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Global Styles for common controls - DARK THEME -->
    <Style TargetType="TextBlock">
        <Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
    </Style>

    <Style TargetType="TextBox" BasedOn="{StaticResource {x:Type TextBox}}">
        <Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
        <Setter Property="Background" Value="{StaticResource ControlBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource BorderBrushDark}"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TextBox">
                    <Border 
                    Background="{TemplateBinding Background}" 
                    BorderBrush="{TemplateBinding BorderBrush}" 
                    BorderThickness="{TemplateBinding BorderThickness}" 
                    CornerRadius="4">
                        <ScrollViewer Margin="0" x:Name="PART_ContentHost"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="Background" Value="{StaticResource ControlBrush}" />
        <Setter Property="Foreground" Value="{StaticResource TextBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource BorderBrushDark}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border
                    x:Name="Border"
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="1"
                    CornerRadius="7">
                        <ContentPresenter
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        Margin="4" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource SomeHoverColorBrush}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="Border" Property="Opacity" Value="0.8" />
                            <Setter Property="Foreground" Value="#FFAAAAAA"/>
                            <!-- Dim text when disabled -->
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Dark CheckBox Style (Applied by default to all CheckBoxes when this theme is loaded) -->
    <Style TargetType="CheckBox" BasedOn="{StaticResource {x:Type CheckBox}}">
        <Setter Property="Foreground" Value="{StaticResource TextBrush}" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CheckBox">
                    <Grid x:Name="RootGrid" VerticalAlignment="Center" SnapsToDevicePixels="True" UseLayoutRounding="True">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <!-- The checkbox box -->
                        <Border x:Name="Border"
                          Width="17" Height="16"
                          Background="{StaticResource ControlBrush}"
                          BorderBrush="{StaticResource BorderBrushDark}"
                          BorderThickness="1"
                          VerticalAlignment="Center"
                          HorizontalAlignment="Left"
                          SnapsToDevicePixels="True"
                          CornerRadius="2"
                          UseLayoutRounding="True"/>
                        <!-- Check Mark -->
                        <Path x:Name="CheckMark"
                              Data="M2,8 L6,12 L14,4"
                              Stroke="{StaticResource TextBrush}"
                              StrokeThickness="2"
                              Visibility="Collapsed"
                              VerticalAlignment="Center"
                              HorizontalAlignment="Center"
                              Grid.Column="0"
                              SnapsToDevicePixels="True"
                              UseLayoutRounding="True">
                            <Path.RenderTransform>
                                <TranslateTransform Y="-2"/>
                            </Path.RenderTransform>
                        </Path>
                        <!-- ContentPresenter for the label -->
                        <ContentPresenter x:Name="contentPresenter"
                                    Grid.Column="1"
                                    VerticalAlignment="Center"
                                    Margin="4,0,0,0"
                                    RecognizesAccessKey="True"
                                    ContentSource="Content"
                                    SnapsToDevicePixels="True"
                                    UseLayoutRounding="True"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="CheckMark" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Border" Property="Opacity" Value="0.5" />
                            <Setter TargetName="CheckMark" Property="Opacity" Value="0.5" />
                            <Setter Property="Foreground" Value="#FFAAAAAA"/>
                            <!-- Dim text when disabled -->
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource SomeHoverColorBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="ProgressBar" BasedOn="{StaticResource {x:Type ProgressBar}}">
        <Setter Property="Foreground" Value="#FF007ACC" />
        <!-- Keep the blue progress, maybe adjust? -->
        <Setter Property="Background" Value="{StaticResource ControlBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource BorderBrushDark}"/>
    </Style>

</ResourceDictionary>